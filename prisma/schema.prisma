// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl      = env("DIRECT_URL")
}

model Role{
  id String @id @default(uuid())
  name String @unique
  users User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model User{
  id String @id @default(uuid())
  username String @unique
  email String @unique
  password String
  roleId String
  role Role @relation(fields: [roleId], references: [id])
  profile Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Profile{
  id String @id @default(uuid())
  fullName String
  image String
  bio String
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
  id String @id @default(uuid())
  name String @unique
  slug String @unique
  blogs Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog{
  id String @id @default(uuid())
  title String
  slug String @unique
  thumbnail String
  introduction String
  readingTime Int
  content String
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}